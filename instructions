1. Folder & File Structure

ignitro-website/
├─ package.json
├─ vite.config.js
├─ tailwind.config.js       # If using Tailwind
├─ postcss.config.js        # If using Tailwind
└─ src/
   ├─ main.jsx
   ├─ Layout.jsx
   ├─ utils/
   │   └─ cn.js             # Optional utility for conditional classNames
   ├─ pages/
   │   ├─ Home.jsx
   │   ├─ About.jsx
   │   ├─ Services.jsx
   │   ├─ Playbook.jsx
   │   ├─ CaseStudies.jsx
   │   ├─ Pricing.jsx
   │   ├─ Blog.jsx
   │   └─ Contact.jsx
   ├─ components/
   │   └─ ui/
   │       └─ button.jsx    # Optional button component
   └─ index.css             # Tailwind + global styles
2. package.json

If you don’t already have one, create a minimal package.json in your project root:

{
  "name": "ignitro-website",
  "version": "1.0.0",
  "private": true,
  "scripts": {
    "dev": "vite",
    "build": "vite build",
    "preview": "vite preview"
  },
  "dependencies": {
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-router-dom": "^6.11.2",
    "framer-motion": "^10.12.16",
    "lucide-react": "^0.268.0"
  },
  "devDependencies": {
    "vite": "^4.3.9"
    // If using Tailwind, also add:
    // "tailwindcss": "^3.3.2",
    // "postcss": "^8.4.21",
    // "autoprefixer": "^10.4.14"
  }
}
Run:

npm install
3. vite.config.js (basic example)

// vite.config.js
import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

export default defineConfig({
  plugins: [react()],
})
4. Tailwind Setup (Optional)

Install Tailwind if desired:
npm install -D tailwindcss postcss autoprefixer
npx tailwindcss init -p
In tailwind.config.js, set the content paths:
// tailwind.config.js
export default {
  content: [
    "./index.html",
    "./src/**/*.{js,ts,jsx,tsx}",
  ],
  theme: { extend: {} },
  plugins: [],
}
In index.css, import Tailwind’s directives:
/* src/index.css */
@tailwind base;
@tailwind components;
@tailwind utilities;

/* Add any global CSS here */
5. main.jsx

Sets up React Router and loads your global styles:

// src/main.jsx
import React from "react"
import ReactDOM from "react-dom/client"
import { BrowserRouter, Routes, Route } from "react-router-dom"

import Layout from "./Layout"
import Home from "./pages/Home"
import About from "./pages/About"
import Services from "./pages/Services"
import Playbook from "./pages/Playbook"
import CaseStudies from "./pages/CaseStudies"
import Pricing from "./pages/Pricing"
import Blog from "./pages/Blog"
import Contact from "./pages/Contact"

import "./index.css" // Tailwind & global styles

ReactDOM.createRoot(document.getElementById("root")).render(
  <React.StrictMode>
    <BrowserRouter>
      <Routes>
        <Route path="/" element={<Layout />}>
          <Route index element={<Home />} />
          <Route path="about" element={<About />} />
          <Route path="services" element={<Services />} />
          <Route path="playbook" element={<Playbook />} />
          <Route path="casestudies" element={<CaseStudies />} />
          <Route path="pricing" element={<Pricing />} />
          <Route path="blog" element={<Blog />} />
          <Route path="contact" element={<Contact />} />
        </Route>
      </Routes>
    </BrowserRouter>
  </React.StrictMode>
)
6. Layout.jsx

Your navbar, mobile menu, and footer:

// src/Layout.jsx
import React, { useState, useEffect } from "react"
import { Outlet, Link, useLocation } from "react-router-dom"
import { Menu, X } from "lucide-react"
import { cn } from "./utils/cn"  // optional utility for classNames

const navigationItems = [
  { title: "About", to: "/about" },
  { title: "Services", to: "/services" },
  { title: "Playbook", to: "/playbook" },
  { title: "Case Studies", to: "/casestudies" },
  { title: "Pricing", to: "/pricing" },
  { title: "Blog", to: "/blog" },
]

export default function Layout() {
  const [isMenuOpen, setIsMenuOpen] = useState(false)
  const [isScrolled, setIsScrolled] = useState(false)
  const location = useLocation()

  useEffect(() => {
    const handleScroll = () => {
      setIsScrolled(window.scrollY > 20)
    }
    window.addEventListener("scroll", handleScroll)
    return () => window.removeEventListener("scroll", handleScroll)
  }, [])

  return (
    <div className="min-h-screen bg-white">
      {/* Navbar */}
      <header
        className={cn(
          "fixed top-0 left-0 right-0 z-50 transition-all duration-300",
          isScrolled ? "bg-white/80 backdrop-blur-md shadow-sm" : "bg-transparent"
        )}
      >
        <div className="container mx-auto px-4">
          <div className="flex items-center justify-between h-20">
            {/* Logo */}
            <Link to="/" className="flex items-center space-x-2">
              <span className="text-2xl font-bold bg-gradient-to-r from-purple-600 to-blue-500 bg-clip-text text-transparent">
                Ignitro
              </span>
            </Link>

            {/* Desktop Navigation */}
            <nav className="hidden md:flex items-center space-x-6">
              {navigationItems.map((item) => (
                <Link
                  key={item.title}
                  to={item.to}
                  className={cn(
                    "text-sm font-medium transition-colors hover:text-purple-600",
                    location.pathname === item.to ? "text-purple-600" : "text-gray-600"
                  )}
                >
                  {item.title}
                </Link>
              ))}
              <Link to="/contact">
                <button className="ml-4 bg-purple-600 hover:bg-purple-700 text-white px-4 py-2 rounded-md">
                  Get Started
                </button>
              </Link>
            </nav>

            {/* Mobile Menu Toggle */}
            <button
              className="md:hidden"
              onClick={() => setIsMenuOpen(!isMenuOpen)}
            >
              {isMenuOpen ? (
                <X className="h-6 w-6 text-gray-600" />
              ) : (
                <Menu className="h-6 w-6 text-gray-600" />
              )}
            </button>
          </div>
        </div>

        {/* Mobile Menu */}
        {isMenuOpen && (
          <div className="md:hidden bg-white border-t">
            <div className="container mx-auto px-4 py-4">
              <nav className="flex flex-col space-y-4">
                {navigationItems.map((item) => (
                  <Link
                    key={item.title}
                    to={item.to}
                    className={cn(
                      "text-sm font-medium transition-colors hover:text-purple-600 py-2",
                      location.pathname === item.to ? "text-purple-600" : "text-gray-600"
                    )}
                    onClick={() => setIsMenuOpen(false)}
                  >
                    {item.title}
                  </Link>
                ))}
                <Link to="/contact" onClick={() => setIsMenuOpen(false)}>
                  <button className="w-full bg-purple-600 hover:bg-purple-700 text-white px-4 py-2 rounded-md">
                    Get Started
                  </button>
                </Link>
              </nav>
            </div>
          </div>
        )}
      </header>

      {/* Main Content */}
      <main className="pt-20">
        <Outlet />
      </main>

      {/* Footer */}
      <footer className="bg-gray-50 border-t mt-32">
        <div className="container mx-auto px-4 py-12">
          <div className="grid grid-cols-1 md:grid-cols-4 gap-8">
            <div className="space-y-4">
              <span className="text-2xl font-bold bg-gradient-to-r from-purple-600 to-blue-500 bg-clip-text text-transparent">
                Ignitro
              </span>
              <p className="text-gray-600 text-sm">
                Igniting growth for early-stage companies through personalized, data-driven strategies.
              </p>
            </div>
            <div>
              <h3 className="font-semibold mb-4">Quick Links</h3>
              <ul className="space-y-2">
                {navigationItems.map((item) => (
                  <li key={item.title}>
                    <Link
                      to={item.to}
                      className="text-gray-600 hover:text-purple-600 text-sm"
                    >
                      {item.title}
                    </Link>
                  </li>
                ))}
              </ul>
            </div>
            <div>
              <h3 className="font-semibold mb-4">Resources</h3>
              <ul className="space-y-2 text-sm text-gray-600">
                <li>
                  <Link to="/pricing" className="hover:text-purple-600">
                    Pricing
                  </Link>
                </li>
                <li>
                  <Link to="/blog" className="hover:text-purple-600">
                    Blog
                  </Link>
                </li>
              </ul>
            </div>
            <div>
              <h3 className="font-semibold mb-4">Contact</h3>
              <ul className="space-y-2 text-sm text-gray-600">
                <li>hello@ignitro.com</li>
                <li>+1 (555) 123-4567</li>
                <li>
                  123 Startup Street
                  <br />
                  Innovation City, 12345
                </li>
              </ul>
            </div>
          </div>
          <div className="border-t mt-12 pt-8 text-center text-sm text-gray-600">
            © {new Date().getFullYear()} Ignitro. All rights reserved.
          </div>
        </div>
      </footer>
    </div>
  )
}
7. Individual Page Files

Below are truncated/condensed versions. Use your own content or the code from your existing project. The critical part is that each page exports a default React component.

Home.jsx
// src/pages/Home.jsx
import React from "react"
import { motion } from "framer-motion"
import { Link } from "react-router-dom"
import { ArrowRight } from "lucide-react"

export default function Home() {
  return (
    <section className="bg-gradient-to-b from-purple-50 to-white py-20 sm:py-32">
      <div className="container mx-auto px-4 grid grid-cols-1 lg:grid-cols-2 gap-12 items-center">
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6 }}
        >
          <h1 className="text-4xl sm:text-5xl font-bold mb-6">
            Ignite Your{" "}
            <span className="bg-gradient-to-r from-purple-600 to-blue-500 bg-clip-text text-transparent">
              Startup Growth
            </span>
          </h1>
          <p className="text-xl text-gray-600 mb-8">
            We help early-stage companies accelerate growth with data-driven strategies.
          </p>
          <div className="flex flex-col sm:flex-row gap-4">
            <Link to="/contact">
              <button className="bg-purple-600 hover:bg-purple-700 text-white px-5 py-3 rounded-md flex items-center">
                Get Started
                <ArrowRight className="ml-2 h-5 w-5" />
              </button>
            </Link>
            <Link to="/services">
              <button className="border border-gray-300 hover:border-purple-500 text-gray-700 px-5 py-3 rounded-md">
                Explore Our Services
              </button>
            </Link>
          </div>
        </motion.div>
        <motion.div
          initial={{ opacity: 0, scale: 0.9 }}
          animate={{ opacity: 1, scale: 1 }}
          transition={{ duration: 0.6, delay: 0.2 }}
        >
          <img
            src="https://images.unsplash.com/photo-1559136555-9303baea8ebd?auto=format&fit=crop&q=80"
            alt="Team collaboration"
            className="rounded-2xl shadow-2xl"
          />
        </motion.div>
      </div>
    </section>
  )
}
About.jsx / Services.jsx / Playbook.jsx / etc.
Similar structure, each exporting a React component with your content. Your code snippet included examples of these pages, so just drop them into the same src/pages/ folder.

8. Utility & Components

src/utils/cn.js (Optional)
// src/utils/cn.js
export function cn(...classes) {
  return classes.filter(Boolean).join(" ")
}
src/components/ui/button.jsx (Optional)
import React from "react"
import { cn } from "../../utils/cn"

export function Button({ children, className = "", ...props }) {
  return (
    <button
      className={cn(
        "inline-flex items-center justify-center px-4 py-2 text-sm font-medium rounded-md shadow-sm focus:outline-none transition-colors",
        className
      )}
      {...props}
    >
      {children}
    </button>
  )
}
9. Tailwind & Global Styles (index.css)

/* src/index.css */

/* If using Tailwind */
@tailwind base;
@tailwind components;
@tailwind utilities;

/* Add your global styles here, if any */
body {
  /* for example */
  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
}
10. Installation & Dev Run

# 1) Install everything:
npm install

# 2) Run dev server
npm run dev

# 3) Open http://localhost:5173
You should now see your Ignitro site with the navigation, pages, and Tailwind-based styling. Adjust text, images, or layout as needed. If you have any leftover references (like createPageUrl) from older code, replace them with plain <Link to="/somePage"> usage in React Router.